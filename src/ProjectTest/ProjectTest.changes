----QUIT----2024-10-04T14:19:23.96386+02:00 Pharo12.0-SNAPSHOT-64bit-92f4878b0c.image priorSource: 0!----QUIT----2024-10-04T14:19:23.964523+02:00 Pharo12.0-SNAPSHOT-64bit-92f4878b0c.image priorSource: 0!----QUIT----2024-10-04T14:19:44.449624+02:00 Pharo12.0-SNAPSHOT-64bit-92f4878b0c.image priorSource: 103!----QUIT----2024-10-04T14:19:44.450379+02:00 Pharo12.0-SNAPSHOT-64bit-92f4878b0c.image priorSource: 207!Object << #MyTestClass	layout: FixedLayout;	traits: {};	slots: {};	sharedVariables: {};	sharedPools: {};	tag: '' ;	package: 'ProjectFruitTree'!----SNAPSHOT----2024-10-09T17:18:34.907+03:00 ProjectTest.image priorSource: 313!----SNAPSHOT----2024-10-09T17:18:34.937+03:00 ProjectTest.image priorSource: 571!!MyTestClassTest commentStamp: '<historical>' prior: 0!A MyTestClassTest is a test class for testing the behavior of MyTestClass!----SNAPSHOT----2024-10-09T17:23:20.822+03:00 ProjectTest.image priorSource: 654!----SNAPSHOT----2024-10-09T17:23:20.851+03:00 ProjectTest.image priorSource: 868!!MyTestClassTest methodsFor: 'basic tests' stamp: '10/9/2024 17:23'!testCreatingMyCounter  "A test that will check if the creation of an object MyCounter is done properly"  |tmp|  tmp := MyTestClass new.  self deny: (tmp = nil)! !!MyTestClassTest methodsFor: 'basic tests' stamp: '10/9/2024 17:23'!testCreatingMyTestClass  "A test that will check if the creation of an object MyCounter is done properly"  |tmp|  tmp := MyTestClass new.  self deny: (tmp = nil)! !MyTestClassTest removeSelector: #testCreatingMyCounter!----SNAPSHOT----2024-10-09T17:26:06.932+03:00 ProjectTest.image priorSource: 951!----SNAPSHOT----2024-10-09T17:26:06.956+03:00 ProjectTest.image priorSource: 1565!Object << #MyTestClass	slots: {#counter};	package: 'ProjectFruitTree'!!MyTestClass methodsFor: 'nil' stamp: '10/9/2024 17:28'!>initialize [        counter := 0.  "Initial value for counter"    ]! !!MyTestClass methodsFor: 'comparing' stamp: '10/9/2024 17:28'!initialize [        counter := 0.  "Initial value for counter"    ]! !MyTestClass removeSelector: #>!----SNAPSHOT----2024-10-09T17:28:32.873+03:00 ProjectTest.image priorSource: 1648!----SNAPSHOT----2024-10-09T17:28:32.904+03:00 ProjectTest.image priorSource: 2106!----SNAPSHOT----2024-10-09T17:28:36.008+03:00 ProjectTest.image priorSource: 2190!----SNAPSHOT----2024-10-09T17:28:36.042+03:00 ProjectTest.image priorSource: 2274!!MyTestClass methodsFor: 'comparing' stamp: '10/9/2024 17:28' prior: 4003!initialize [        counter := 0.     ]! !!MyTestClass methodsFor: 'nil' stamp: '10/9/2024 17:28'!increment [    counter := counter + 1.]! !----SNAPSHOT----2024-10-09T17:28:52.317+03:00 ProjectTest.image priorSource: 2358!----SNAPSHOT----2024-10-09T17:28:52.342+03:00 ProjectTest.image priorSource: 2664!----SNAPSHOT----2024-10-09T17:29:04.184+03:00 ProjectTest.image priorSource: 2748!----SNAPSHOT----2024-10-09T17:29:04.222+03:00 ProjectTest.image priorSource: 2832!----SNAPSHOT----2024-10-09T17:29:11.795+03:00 ProjectTest.image priorSource: 2916!----SNAPSHOT----2024-10-09T17:29:11.827+03:00 ProjectTest.image priorSource: 3000!!MyTestClass methodsFor: 'nil' stamp: '10/9/2024 17:29'!decrement [    counter := counter - 1.]! !!MyTestClass methodsFor: 'nil' stamp: '10/9/2024 17:29'!counter [    ^counter.]! !----SNAPSHOT----2024-10-09T17:31:08.863+03:00 ProjectTest.image priorSource: 3084!----SNAPSHOT----2024-10-09T17:31:08.902+03:00 ProjectTest.image priorSource: 3356!!MyTestClassTest methodsFor: 'nil' stamp: '10/9/2024 17:33'!testIncrementing  "A test that will check if method increment is working properly.     Test value 5. Expected result 6."  |counter|  counter := MyTestClass new.  counter counter: 5.  counter increment.  self assert: (counter value = 6)! !!MyTestClassTest methodsFor: 'nil' stamp: '10/9/2024 17:34'!testDecrementing  "A test that will check if method decrement is working properly.   Test value 5. Expested result is 4."  |counter|  counter := MyTestClass new.  counter value: 5.  counter decrement.  self assert: (counter value = 4)! !!MyTestClass methodsFor: 'nil' stamp: '10/9/2024 17:36'!counter: anInteger	"Method that sets *annteger* as a variable value"	counter := anInteger! !!MyTestClassTest methodsFor: 'tests' stamp: '10/9/2024 17:37' prior: 7787!testDecrementing  "A test that will check if method decrement is working properly.   Test value 5. Expested result is 4."  |counter|  counter := MyTestClass new.  counter counter: 5.  counter decrement.  self assert: (counter value = 4)! !----SNAPSHOT----2024-10-09T17:40:26.749+03:00 ProjectTest.image priorSource: 3440!----SNAPSHOT----2024-10-09T17:40:26.789+03:00 ProjectTest.image priorSource: 4611!BaselineOf subclass: #BaselineOfProjectFruitTree    instanceVariableNames: ''    classVariableNames: ''    package: 'BaselineOfProjectFruitTree'!!BaselineOfProjectFruitTree methodsFor: 'nil' stamp: '10/9/2024 17:46'!baseline: spec    <baseline>    spec for: #common do: [                  "Packages"        spec            package: 'ProjectFruitTree';            package: 'ProjectFruitTree-Tests' with: [ spec requires: #('ProjectFruitTree') ] ].! !----SNAPSHOT----2024-10-09T17:46:12.849+03:00 ProjectTest.image priorSource: 4695!----SNAPSHOT----2024-10-09T17:46:12.873+03:00 ProjectTest.image priorSource: 5242!----SNAPSHOT----2024-10-09T17:55:26.112+03:00 ProjectTest.image priorSource: 5326!----SNAPSHOT----2024-10-09T17:55:26.122+03:00 ProjectTest.image priorSource: 5410!